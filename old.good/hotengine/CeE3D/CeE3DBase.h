
#pragma once

class CeE3DBase :
	public CComObjectRoot,
	public CComCoClass<CeE3DBase, &CLSID_CeE3DBase>,
	public IDispatchImpl<ICeE3DBase, &IID_ICeE3DBase> {
public:
	CeE3DBase();
	virtual ~CeE3DBase();

	STDMETHOD(Accum)(GLenum op, GLfloat value);
	STDMETHOD(AlphaFunc)(GLenum func, GLclampf ref);
	STDMETHOD(ArrayElement)(GLint i);
	STDMETHOD(Begin)(GLenum mode);
	STDMETHOD(BindTexture)(GLenum target, GLuint texture);
	STDMETHOD(Bitmap)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte *bitmap);
	STDMETHOD(BlendFunc)(GLenum sfactor, GLenum dfactor);
	STDMETHOD(CallList)(GLuint list);
	STDMETHOD(CallLists)(GLsizei n, GLenum type, BYTE *lists);
	STDMETHOD(Clear)(GLbitfield mask);
	STDMETHOD(ClearAccum)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	STDMETHOD(ClearColor)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
	STDMETHOD(ClearDepth)(GLclampd depth);
	STDMETHOD(ClearIndex)(GLfloat c);
	STDMETHOD(ClearStencil)(GLint s);
	STDMETHOD(ClipPlane)(GLenum plane, GLdouble *equation);
	STDMETHOD(Color3b)(GLbyte red, GLbyte green, GLbyte blue);
	STDMETHOD(Color3bv)(GLbyte *v);
	STDMETHOD(Color3d)(GLdouble red, GLdouble green, GLdouble blue);
	STDMETHOD(Color3dv)(GLdouble *v);
	STDMETHOD(Color3f)(GLfloat red, GLfloat green, GLfloat blue);
	STDMETHOD(Color3fv)(GLfloat *v);
	STDMETHOD(Color3i)(GLint red, GLint green, GLint blue);
	STDMETHOD(Color3iv)(GLint *v);
	STDMETHOD(Color3s)(GLshort red, GLshort green, GLshort blue);
	STDMETHOD(Color3sv)(GLshort *v);
	STDMETHOD(Color3ub)(GLubyte red, GLubyte green, GLubyte blue);
	STDMETHOD(Color3ubv)(GLubyte *v);
	STDMETHOD(Color3ui)(GLuint red, GLuint green, GLuint blue);
	STDMETHOD(Color3uiv)(GLuint *v);
	STDMETHOD(Color3us)(GLushort red, GLushort green, GLushort blue);
	STDMETHOD(Color3usv)(GLushort *v);
	STDMETHOD(Color4b)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
	STDMETHOD(Color4bv)(GLbyte *v);
	STDMETHOD(Color4d)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
	STDMETHOD(Color4dv)(GLdouble *v);
	STDMETHOD(Color4f)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	STDMETHOD(Color4fv)(GLfloat *v);
	STDMETHOD(Color4i)(GLint red, GLint green, GLint blue, GLint alpha);
	STDMETHOD(Color4iv)(GLint *v);
	STDMETHOD(Color4s)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
	STDMETHOD(Color4sv)(GLshort *v);
	STDMETHOD(Color4ub)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
	STDMETHOD(Color4ubv)(GLubyte *v);
	STDMETHOD(Color4ui)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
	STDMETHOD(Color4uiv)(GLuint *v);
	STDMETHOD(Color4us)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
	STDMETHOD(Color4usv)(GLushort *v);
	STDMETHOD(ColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	STDMETHOD(ColorMaterial)(GLenum face, GLenum mode);
	STDMETHOD(ColorPointer)(GLint size, GLenum type, GLsizei stride, BYTE *pointer);
	STDMETHOD(CopyPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
	STDMETHOD(CopyTexImage1D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
	STDMETHOD(CopyTexImage2D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	STDMETHOD(CopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	STDMETHOD(CopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	STDMETHOD(CullFace)(GLenum mode);
	STDMETHOD(DeleteLists)(GLuint list, GLsizei range);
	STDMETHOD(DeleteTextures)(GLsizei n, GLuint *textures);
	STDMETHOD(DepthFunc)(GLenum func);
	STDMETHOD(DepthMask)(GLboolean flag);
	STDMETHOD(DepthRange)(GLclampd zNear, GLclampd zFar);
	STDMETHOD(Disable)(GLenum cap);
	STDMETHOD(DisableClientState)(GLenum array);
	STDMETHOD(DrawArrays)(GLenum mode, GLint first, GLsizei count);
	STDMETHOD(DrawBuffer)(GLenum mode);
	STDMETHOD(DrawElements)(GLenum mode, GLsizei count, GLenum type, BYTE *indices);
	STDMETHOD(DrawPixels)(GLsizei width, GLsizei height, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(EdgeFlag)(GLboolean flag);
	STDMETHOD(EdgeFlagPointer)(GLsizei stride, BYTE *pointer);
	STDMETHOD(EdgeFlagv)(GLboolean *flag);
	STDMETHOD(Enable)(GLenum cap);
	STDMETHOD(EnableClientState)(GLenum array);
	STDMETHOD(End)();
	STDMETHOD(EndList)();
	STDMETHOD(EvalCoord1d)(GLdouble u);
	STDMETHOD(EvalCoord1dv)(GLdouble *u);
	STDMETHOD(EvalCoord1f)(GLfloat u);
	STDMETHOD(EvalCoord1fv)(GLfloat *u);
	STDMETHOD(EvalCoord2d)(GLdouble u, GLdouble v);
	STDMETHOD(EvalCoord2dv)(GLdouble *u);
	STDMETHOD(EvalCoord2f)(GLfloat u, GLfloat v);
	STDMETHOD(EvalCoord2fv)(GLfloat *u);
	STDMETHOD(EvalMesh1)(GLenum mode, GLint i1, GLint i2);
	STDMETHOD(EvalMesh2)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
	STDMETHOD(EvalPoint1)(GLint i);
	STDMETHOD(EvalPoint2)(GLint i, GLint j);
	STDMETHOD(FeedbackBuffer)(GLsizei size, GLenum type, GLfloat *buffer);
	STDMETHOD(Finish)();
	STDMETHOD(Flush)();
	STDMETHOD(FrontFace)(GLenum mode);
	STDMETHOD(Frustum)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
	STDMETHOD(GenTextures)(GLsizei n, GLuint *textures);
	STDMETHOD(Hint)(GLenum target, GLenum mode);
	STDMETHOD(IndexMask)(GLuint mask);
	STDMETHOD(IndexPointer)(GLenum type, GLsizei stride, BYTE *pointer);
	STDMETHOD(Indexd)(GLdouble c);
	STDMETHOD(Indexdv)(GLdouble *c);
	STDMETHOD(Indexf)(GLfloat c);
	STDMETHOD(Indexfv)(GLfloat *c);
	STDMETHOD(Indexi)(GLint c);
	STDMETHOD(Indexiv)(GLint *c);
	STDMETHOD(Indexs)(GLshort c);
	STDMETHOD(Indexsv)(GLshort *c);
	STDMETHOD(Indexub)(GLubyte c);
	STDMETHOD(Indexubv)(GLubyte *c);
	STDMETHOD(InitNames)();
	STDMETHOD(InterleavedArrays)(GLenum format, GLsizei stride, BYTE *pointer);

	STDMETHOD(LightModelf)(GLenum pname, GLfloat param);
	STDMETHOD(LightModelfv)(GLenum pname, GLfloat *params);
	STDMETHOD(LightModeli)(GLenum pname, GLint param);
	STDMETHOD(LightModeliv)(GLenum pname, GLint *params);

	STDMETHOD(LineStipple)(GLint factor, GLushort pattern);
	STDMETHOD(LineWidth)(GLfloat width);
	STDMETHOD(ListBase)(GLuint base);
	STDMETHOD(LoadIdentity)();
	STDMETHOD(LoadMatrixd)(GLdouble *m);
	STDMETHOD(LoadMatrixf)(GLfloat *m);
	STDMETHOD(LoadName)(GLuint name);
	STDMETHOD(LogicOp)(GLenum opcode);
	STDMETHOD(Map1d)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble *points);
	STDMETHOD(Map1f)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat *points);
	STDMETHOD(Map2d)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble *points);
	STDMETHOD(Map2f)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat *points);
	STDMETHOD(MapGrid1d)(GLint un, GLdouble u1, GLdouble u2);
	STDMETHOD(MapGrid1f)(GLint un, GLfloat u1, GLfloat u2);
	STDMETHOD(MapGrid2d)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
	STDMETHOD(MapGrid2f)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
	STDMETHOD(Materialf)(GLenum face, GLenum pname, GLfloat param);
	STDMETHOD(Materialfv)(GLenum face, GLenum pname, GLfloat *params);
	STDMETHOD(Materiali)(GLenum face, GLenum pname, GLint param);
	STDMETHOD(Materialiv)(GLenum face, GLenum pname, GLint *params);
	STDMETHOD(MatrixMode)(GLenum mode);
	STDMETHOD(MultMatrixd)(GLdouble *m);
	STDMETHOD(MultMatrixf)(GLfloat *m);
	STDMETHOD(NewList)(GLuint list, GLenum mode);
	STDMETHOD(Ortho)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
	STDMETHOD(PassThrough)(GLfloat token);
	STDMETHOD(PixelMapfv)(GLenum map, GLsizei mapsize, GLfloat *values);
	STDMETHOD(PixelMapuiv)(GLenum map, GLsizei mapsize, GLuint *values);
	STDMETHOD(PixelMapusv)(GLenum map, GLsizei mapsize, GLushort *values);
	STDMETHOD(PixelStoref)(GLenum pname, GLfloat param);
	STDMETHOD(PixelStorei)(GLenum pname, GLint param);
	STDMETHOD(PixelTransferf)(GLenum pname, GLfloat param);
	STDMETHOD(PixelTransferi)(GLenum pname, GLint param);
	STDMETHOD(PixelZoom)(GLfloat xfactor, GLfloat yfactor);
	STDMETHOD(PointSize)(GLfloat size);
	STDMETHOD(PolygonMode)(GLenum face, GLenum mode);
	STDMETHOD(PolygonOffset)(GLfloat factor, GLfloat units);
	STDMETHOD(PolygonStipple)(GLubyte *mask);
	STDMETHOD(PopAttrib)();
	STDMETHOD(PopClientAttrib)();
	STDMETHOD(PopMatrix)();
	STDMETHOD(PopName)();
	STDMETHOD(PrioritizeTextures)(GLsizei n, GLuint *textures, GLclampf *priorities);
	STDMETHOD(PushAttrib)(GLbitfield mask);
	STDMETHOD(PushClientAttrib)(GLbitfield mask);
	STDMETHOD(PushMatrix)();
	STDMETHOD(PushName)(GLuint name);
	STDMETHOD(ReadBuffer)(GLenum mode);
	STDMETHOD(ReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(Rotated)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
	STDMETHOD(Rotatef)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
	STDMETHOD(Scaled)(GLdouble x, GLdouble y, GLdouble z);
	STDMETHOD(Scalef)(GLfloat x, GLfloat y, GLfloat z);
	STDMETHOD(Scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
	STDMETHOD(SelectBuffer)(GLsizei size, GLuint *buffer);
	STDMETHOD(ShadeModel)(GLenum mode);
	STDMETHOD(StencilFunc)(GLenum func, GLint ref, GLuint mask);
	STDMETHOD(StencilMask)(GLuint mask);
	STDMETHOD(StencilOp)(GLenum fail, GLenum zfail, GLenum zpass);
	STDMETHOD(TexEnvf)(GLenum target, GLenum pname, GLfloat param);
	STDMETHOD(TexEnvfv)(GLenum target, GLenum pname, GLfloat *params);
	STDMETHOD(TexEnvi)(GLenum target, GLenum pname, GLint param);
	STDMETHOD(TexEnviv)(GLenum target, GLenum pname, GLint *params);
	STDMETHOD(TexGend)(GLenum coord, GLenum pname, GLdouble param);
	STDMETHOD(TexGendv)(GLenum coord, GLenum pname, GLdouble *params);
	STDMETHOD(TexGenf)(GLenum coord, GLenum pname, GLfloat param);
	STDMETHOD(TexGenfv)(GLenum coord, GLenum pname, GLfloat *params);
	STDMETHOD(TexGeni)(GLenum coord, GLenum pname, GLint param);
	STDMETHOD(TexGeniv)(GLenum coord, GLenum pname, GLint *params);
	STDMETHOD(TexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(TexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(TexParameterf)(GLenum target, GLenum pname, GLfloat param);
	STDMETHOD(TexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
	STDMETHOD(TexParameteri)(GLenum target, GLenum pname, GLint param);
	STDMETHOD(TexParameteriv)(GLenum target, GLenum pname, GLint *params);
	STDMETHOD(TexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(TexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(Translated)(GLdouble x, GLdouble y, GLdouble z);
	STDMETHOD(Translatef)(GLfloat x, GLfloat y, GLfloat z);
	STDMETHOD(Viewport)(GLint x, GLint y, GLsizei width, GLsizei height);
	STDMETHOD(AreTexturesResident)(GLsizei n, GLuint *textures, GLboolean *residences, GLboolean *retval);
	STDMETHOD(GenLists)(GLsizei range, GLuint *retval);
	STDMETHOD(GetBooleanv)(GLenum pname, GLboolean *ret);
	STDMETHOD(GetClipPlane)(GLenum plane, GLdouble *ret);
	STDMETHOD(GetDoublev)(GLenum pname, GLdouble *ret);
	STDMETHOD(GetFloatv)(GLenum pname, GLfloat *ret);
	STDMETHOD(GetIntegerv)(GLenum pname, GLint *ret);
	STDMETHOD(GetLightfv)(GLenum light, GLenum pname, GLfloat *ret);
	STDMETHOD(GetLightiv)(GLenum light, GLenum pname, GLint *ret);
	STDMETHOD(GetMapdv)(GLenum target, GLenum query, GLdouble *ret);
	STDMETHOD(GetMapfv)(GLenum target, GLenum query, GLfloat *ret);
	STDMETHOD(GetMapiv)(GLenum target, GLenum query, GLint *ret);
	STDMETHOD(GetMaterialfv)(GLenum face, GLenum pname, GLfloat *ret);
	STDMETHOD(GetMaterialiv)(GLenum face, GLenum pname, GLint *ret);
	STDMETHOD(GetPixelMapfv)(GLenum map, GLfloat *ret);
	STDMETHOD(GetPixelMapuiv)(GLenum map, GLuint *ret);
	STDMETHOD(GetPixelMapusv)(GLenum map, GLushort *ret);
	STDMETHOD(GetPointerv)(GLenum pname, LONG *retaddr);
	STDMETHOD(GetPolygonStipple)(GLubyte *ret);
	STDMETHOD(GetTexEnvfv)(GLenum target, GLenum pname, GLfloat *ret);
	STDMETHOD(GetTexEnviv)(GLenum target, GLenum pname, GLint *ret);
	STDMETHOD(GetTexGendv)(GLenum coord, GLenum pname, GLdouble *ret);
	STDMETHOD(GetTexGenfv)(GLenum coord, GLenum pname, GLfloat *ret);
	STDMETHOD(GetTexGeniv)(GLenum coord, GLenum pname, GLint *ret);
	STDMETHOD(GetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, BYTE *pixels);
	STDMETHOD(GetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *ret);
	STDMETHOD(GetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *ret);
	STDMETHOD(GetTexParameterfv)(GLenum target, GLenum pname, GLfloat *ret);
	STDMETHOD(GetTexParameteriv)(GLenum target, GLenum pname, GLint *ret);
	STDMETHOD(GetError)(GLenum *retval);
	STDMETHOD(GetString)(GLenum name, BSTR *retval);
	STDMETHOD(IsEnabled)(GLenum cap, GLboolean *retval);
	STDMETHOD(IsList)(GLuint list, GLboolean *retval);
	STDMETHOD(IsTexture)(GLuint texture, GLboolean *retval);
	STDMETHOD(RenderMode)(GLenum mode, GLint *retval);

	BEGIN_COM_MAP(CeE3DBase)
		COM_INTERFACE_ENTRY2(IDispatch, ICeE3DBase)
		COM_INTERFACE_ENTRY(ICeE3DBase)
	END_COM_MAP()

	DECLARE_REGISTRY_RESOURCEID(IDR_CeE3DBase)
	DECLARE_NOT_AGGREGATABLE(CeE3DBase)

protected:
};

typedef CeE3DBase	*PCEE3DBASE, *LPCEE3DBASE;

