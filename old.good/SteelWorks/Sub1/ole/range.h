#if !defined(AFX_RANGE_H__BA9C0E16_FC83_4436_9902_26EC1B71EC0B__INCLUDED_)
#define AFX_RANGE_H__BA9C0E16_FC83_4436_9902_26EC1B71EC0B__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CBorders;
class COWCFont;
class CHyperlink;
class Cnterior;
class CWorksheet;

/////////////////////////////////////////////////////////////////////////////
// CRange wrapper class

class CRange : public COleDispatchDriver
{
public:
	CRange() {}		// Calls COleDispatchDriver default constructor
	CRange(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CRange(const CRange& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	void AutoFilter();
	void AutoFitColumns();
	void AutoFitRows();
	void Clear();
	void ClearFormats();
	void ClearContents();
	void Copy(const VARIANT& RangeDest);
	void Cut(const VARIANT& RangeDest);
	void DeleteRows(long NumberOfRows);
	void DeleteColumns(long NumberOfColumns);
	CRange Find(const VARIANT& What, const VARIANT& After, long FindLookIn, long FindLookAt, long SearchOrder, long SearchDirection, BOOL MatchCase);
	void FreezePanes(long FreezeDirection);
	void InsertRows(long NumberOfRows);
	void InsertColumns(long NumberOfColumns);
	void LoadText(LPCTSTR File, LPCTSTR Delimiters, BOOL ConsecutiveDelimAsOne, LPCTSTR TextQualifier);
	void Merge();
	CRange Offset(long NumberOfRows, long NumberOfColumns);
	void ParseText(LPCTSTR Text, LPCTSTR Delimiters, BOOL ConsecutiveDelimAsOne, LPCTSTR TextQualifier);
	void Paste();
	void Select();
	void Sort(long ColumnKey, long Order, long YesNoGuessHeader);
	void Show();
	void UnMerge();
	VARIANT Get_Default(const VARIANT& Row, const VARIANT& Column);
	void Set_Default(const VARIANT& Row, const VARIANT& Column, const VARIANT& newValue);
	CString GetAddress();
	CBorders GetBorders();
	CRange GetCells();
	long GetColumn();
	CRange GetColumns();
	VARIANT GetColumnWidth();
	void SetColumnWidth(long nNewValue);
	CRange GetCurrentRegion();
	CRange GetEntireColumn();
	CRange GetEntireRow();
	COWCFont GetFont();
	CString GetFormula();
	void SetFormula(LPCTSTR lpszNewValue);
	CString GetFormulaLocal();
	VARIANT GetHasFormula();
	long GetHeight();
	BOOL GetHidden();
	void SetHidden(BOOL bNewValue);
	VARIANT GetHAlignment();
	void SetHAlignment(long nNewValue);
	CString GetHTMLData();
	CHyperlink GetHyperlink();
	Cnterior GetInterior();
	CRange GetItem(const VARIANT& Row, const VARIANT& Column);
	long GetLeft();
	VARIANT GetLocked();
	void SetLocked(BOOL bNewValue);
	CRange GetMergeArea();
	VARIANT GetHasMergeCells();
	VARIANT GetNumberFormat();
	void SetNumberFormat(LPCTSTR lpszNewValue);
	CWorksheet GetParent();
	CRange GetRange(const VARIANT& Cell1, const VARIANT& Cell2);
	long GetRow();
	VARIANT GetRowHeight();
	void SetRowHeight(long nNewValue);
	CRange GetRows();
	VARIANT GetText();
	long GetTop();
	VARIANT GetValue();
	void SetValue(const VARIANT& newValue);
	VARIANT GetVAlignment();
	void SetVAlignment(long nNewValue);
	long GetWidth();
	long GetCount();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_RANGE_H__BA9C0E16_FC83_4436_9902_26EC1B71EC0B__INCLUDED_)
