VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "FormCompiler"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit


' f as Form
Public Function asSWT(f)
    Dim ctrl
    Dim line
    Dim script
    Dim swtType, swtEvent
    Dim i

    script = "// Generated by VBPTools.FormCompiler " & App.Major & "." & App.Minor & App.Revision & vbNewLine _
                & "// Begin:: " & f.Name & vbNewLine _
                & vbNewLine


    ' Default Initializer
    script = script & vbNewLine & "// Default Initializer" & vbNewLine _
                & "protected void _Initialize(Shell shell) {" & vbNewLine
    For Each ctrl In f.Controls
        Dim swtCstrParam
        swtType = SWTTypeMapping(TypeName(ctrl), ctrl)
        If swtType <> "" Then
            swtCstrParam = "SWT.LEFT"
            swtEvent = ""
            Select Case TypeName(ctrl)
            Case "Label"
                If ctrl.Alignment = 1 Then swtCstrParam = "SWT.RIGHT"
                If ctrl.Alignment = 2 Then swtCstrParam = "SWT.CENTER"
            Case "TextBox"
                If ctrl.BorderStyle = 1 Then swtCstrParam = "SWT.BORDER"
                swtEvent = "Modify"
            Case "CommandButton"
                swtCstrParam = "SWT.CENTER"
                swtEvent = "Selection"
            Case "CheckBox"
                swtCstrParam = swtCstrParam & " | SWT.PUSH"
                swtEvent = "Selection"
            Case "OptionButton"
                swtCstrParam = swtCstrParam & " | SWT.RADIO"
                If ctrl.Alignment = 1 Then swtCstrParam = "SWT.RIGHT"
                swtEvent = "Selection"
            Case "ComboBox"
                If ctrl.Style = 2 Then swtCstrParam = swtCstrParam & " | SWT.DROP_DOWN"
                swtEvent = "Selection"
            Case "ListBox"
                swtEvent = "Selection"
            Case "HScrollBar"
                swtEvent = "Selection"
            Case "VScrollBar"
                swtEvent = "Selection"
            End Select

            ' Create object
            line = "    " & javaName(ctrl.Name) & " = new " & swtType & "(shell, " & swtCstrParam & "); " & vbNewLine

            ' Set bounds
            line = line & "    " & javaName(ctrl.Name) & ".setBounds(" & ctrl.Left & ", " & ctrl.Top & ", " & ctrl.Width & ", " & ctrl.Height & "); " & vbNewLine

            ' Set specfic properties if any
            Select Case TypeName(ctrl)
            Case "Label"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Caption) & "); " & vbNewLine
            Case "TextBox"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Text) & "); " & vbNewLine
            Case "Frame"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Caption) & "); " & vbNewLine
            Case "CommandButton"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Caption) & "); " & vbNewLine
            Case "CheckBox"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Caption) & "); " & vbNewLine
            Case "OptionButton"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Caption) & "); " & vbNewLine
            Case "ComboBox"
                line = line & "    " & javaName(ctrl.Name) & ".setText(" & javaQuote(ctrl.Text) & "); " & vbNewLine
                For i = 0 To ctrl.ListCount - 1
                    line = line & "    " & javaName(ctrl.Name) & ".add(" & javaQuote(ctrl.List(i)) & "); " & vbNewLine
                Next
            Case "ListBox"
                For i = 0 To ctrl.ListCount - 1
                    line = line & "    " & javaName(ctrl.Name) & ".add(" & javaQuote(ctrl.List(i)) & "); " & vbNewLine
                Next
            End Select

            ' Attach handler
            Select Case swtEvent
            Case "Modify"
                swtEvent = "Modify"
                line = line & "    " & javaName(ctrl.Name) & ".addModifyListener(" & vbNewLine _
                            & "        new ModifyListener() {" & vbNewLine _
                            & "            public void modifyText(ModifyEvent e) {" & vbNewLine _
                            & "                " & javaName(ctrl.Name) & "OnModify(e); " & vbNewLine _
                            & "            }" & vbNewLine _
                            & "        }); " & vbNewLine
            Case "Selection"
                swtEvent = "Selection"
                line = line & "    " & javaName(ctrl.Name) & ".addSelectionListener(" & vbNewLine _
                            & "        new SelectionListener() {" & vbNewLine _
                            & "            public void widgetSelected(SelectionEvent e) {" & vbNewLine _
                            & "                " & javaName(ctrl.Name) & "OnSelection(e); " & vbNewLine _
                            & "            }" & vbNewLine _
                            & "            public void widgetDefaultSelected(SelectionEvent e) {" & vbNewLine _
                            & "                " & javaName(ctrl.Name) & "OnSelection(e); " & vbNewLine _
                            & "            }" & vbNewLine _
                            & "        }); " & vbNewLine
            End Select

            script = script & line
        End If 'swtType<>""
    Next

    script = script & "}" & vbNewLine & vbNewLine



    ' Defined Handler
    script = script & vbNewLine & "// Handlers Declaration" & vbNewLine
    For Each ctrl In f.Controls
        swtEvent = ""
        Select Case TypeName(ctrl)
        Case "TextBox"
            swtEvent = "Modify"
        Case "CommandButton"
            swtEvent = "Selection"
        Case "CheckBox"
            swtEvent = "Selection"
        Case "OptionButton"
            swtEvent = "Selection"
        Case "ComboBox"
            swtEvent = "Selection"
        Case "ListBox"
            swtEvent = "Selection"
        Case "HScrollBar"
            swtEvent = "Selection"
        Case "VScrollBar"
            swtEvent = "Selection"
        End Select
        If swtEvent <> "" Then
            line = "protected void " & javaName(ctrl.Name) & "On" & swtEvent & "(" & swtEvent & "Event e) {" _
                    & "}" & vbNewLine _
                    & vbNewLine
            script = script & line
        End If
    Next



    ' Field Declares
    script = script & vbNewLine & "// Fields Declaration" & vbNewLine
    For Each ctrl In f.Controls
        swtType = SWTTypeMapping(TypeName(ctrl), ctrl)
        If swtType <> "" Then
            line = "private " & swtType & " " & javaName(ctrl.Name) & "; "
            script = script & line & vbNewLine
        End If
    Next



    script = script & "// ::End" & vbNewLine _
                & vbNewLine

    asSWT = script
End Function


Private Function SWTTypeMapping(vbType, ctrl) As String
    Dim t

    Select Case vbType
    Case "Picture"
        t = "Canvas"
    Case "Label"
        t = "Label"
    Case "TextBox"
        t = "Text"
    Case "Frame"
        t = "Group"
    Case "CommandButton"
        t = "Button"
    Case "CheckBox"
        t = "Button"
    Case "OptionButton"
        t = "Button"
    Case "ComboBox"
        t = "Combo"
    Case "ListBox"
        t = "List"
    Case "HScrollBar"
        t = "ScrollBar"
    Case "VScrollBar"
        t = "ScrollBar"
    Case "Image"
        t = "Canvas"
    'Case "Menu"
    '    t = "Menu"
    End Select

    SWTTypeMapping = t
End Function


Private Function javaName(s) As String
    javaName = LCase(Left(s, 1)) & Mid(s, 2)
End Function


Private Function javaQuote(s) As String
    javaQuote = """" & _
                Replace(Replace(Replace(s, """", "\"""), Chr(10), "\n"), Chr(13), "\r") & _
                """"
End Function
