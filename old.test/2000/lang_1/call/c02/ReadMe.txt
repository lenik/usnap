

(...)参数的实现方法

	〉编译器实现(...)的方法其实是把函数看作(void)来处理，具体的操作函数内部决定，
		参数栈的释放完全通过编译器实现。
		也就是说, add esp, N 在(...)调用时总是由调用者执行。

		当用汇编方式调用(...)函数时不必考虑函数的调用协议，
		只管在调用完后辅助释放关于(...)的参数即可。

	〉一般调用 由于最左边的参数位于栈顶，所以可以通过在最左边放入一个
		参数计数器来说明参数栈状况，或在最右边放入一个结束符。

	〉stdcall(pascal)与cdecl的区别在于返回时弹出参数的方式不同。

	〉如果参数压入次序相反，由于最右边参数（不确定参数）位于栈顶，
		所以必须将计数器放在最右边，或将结束符放在最左边。


用(...)实现通用函数调用

	〉能够用一个函数调用任何其他函数，通过给出参数计数的方法实现。



函数返回：不返回到调用者

	〉通过修改栈底返回字，栈底通过计算定位。
