Conflict in state 15 between rule 14 and token '+' resolved as reduce.
Conflict in state 15 between rule 14 and token '-' resolved as reduce.
Conflict in state 15 between rule 14 and token '*' resolved as reduce.
Conflict in state 15 between rule 14 and token '/' resolved as reduce.
Conflict in state 15 between rule 14 and token '^' resolved as shift.
Conflict in state 23 between rule 8 and token '+' resolved as shift.
Conflict in state 23 between rule 8 and token '-' resolved as shift.
Conflict in state 23 between rule 8 and token '*' resolved as shift.
Conflict in state 23 between rule 8 and token '/' resolved as shift.
Conflict in state 23 between rule 8 and token '^' resolved as shift.
Conflict in state 26 between rule 10 and token '+' resolved as reduce.
Conflict in state 26 between rule 10 and token '-' resolved as reduce.
Conflict in state 26 between rule 10 and token '*' resolved as shift.
Conflict in state 26 between rule 10 and token '/' resolved as shift.
Conflict in state 26 between rule 10 and token '^' resolved as shift.
Conflict in state 27 between rule 11 and token '+' resolved as reduce.
Conflict in state 27 between rule 11 and token '-' resolved as reduce.
Conflict in state 27 between rule 11 and token '*' resolved as shift.
Conflict in state 27 between rule 11 and token '/' resolved as shift.
Conflict in state 27 between rule 11 and token '^' resolved as shift.
Conflict in state 28 between rule 12 and token '+' resolved as reduce.
Conflict in state 28 between rule 12 and token '-' resolved as reduce.
Conflict in state 28 between rule 12 and token '*' resolved as reduce.
Conflict in state 28 between rule 12 and token '/' resolved as reduce.
Conflict in state 28 between rule 12 and token '^' resolved as shift.
Conflict in state 29 between rule 13 and token '+' resolved as reduce.
Conflict in state 29 between rule 13 and token '-' resolved as reduce.
Conflict in state 29 between rule 13 and token '*' resolved as reduce.
Conflict in state 29 between rule 13 and token '/' resolved as reduce.
Conflict in state 29 between rule 13 and token '^' resolved as shift.
Conflict in state 30 between rule 15 and token '+' resolved as reduce.
Conflict in state 30 between rule 15 and token '-' resolved as reduce.
Conflict in state 30 between rule 15 and token '*' resolved as reduce.
Conflict in state 30 between rule 15 and token '/' resolved as reduce.
Conflict in state 30 between rule 15 and token '^' resolved as shift.

Grammar
rule 1    input ->		/* empty */
rule 2    input -> input line
rule 3    line -> '\n'
rule 4    line -> exp '\n'
rule 5    line -> error '\n'
rule 6    exp -> NUM
rule 7    exp -> VAR
rule 8    exp -> VAR '=' exp
rule 9    exp -> FNCT '(' exp ')'
rule 10   exp -> exp '+' exp
rule 11   exp -> exp '-' exp
rule 12   exp -> exp '*' exp
rule 13   exp -> exp '/' exp
rule 14   exp -> '-' exp
rule 15   exp -> exp '^' exp
rule 16   exp -> '(' exp ')'
rule 17   exp -> '$'

Terminals, with rules where they appear

$ (-1)
'\n' (10) 3 4 5
'$' (36) 17
'(' (40) 9 16
')' (41) 9 16
'*' (42) 12
'+' (43) 10
'-' (45) 11 14
'/' (47) 13
'=' (61) 8
'^' (94) 15
error (256) 5
NUM (258) 6
VAR (259) 7 8
FNCT (260) 9
NEG (261)

Nonterminals, with rules where they appear

input (17)
    on left: 1 2, on right: 2
line (18)
    on left: 3 4 5, on right: 2
exp (19)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17, on right: 4 8 9 10 11
    12 13 14 15 16


state 0

    $default	reduce using rule 1 (input)

    input	go to state 1



state 1

    input  ->  input . line   (rule 2)

    $   	go to state 32
    error	shift, and go to state 2
    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '\n'	shift, and go to state 7
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    line	go to state 10
    exp 	go to state 11



state 2

    line  ->  error . '\n'   (rule 5)

    '\n'	shift, and go to state 12



state 3

    exp  ->  NUM .   (rule 6)

    $default	reduce using rule 6 (exp)



state 4

    exp  ->  VAR .   (rule 7)
    exp  ->  VAR . '=' exp   (rule 8)

    '=' 	shift, and go to state 13

    $default	reduce using rule 7 (exp)



state 5

    exp  ->  FNCT . '(' exp ')'   (rule 9)

    '(' 	shift, and go to state 14



state 6

    exp  ->  '-' . exp   (rule 14)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 15



state 7

    line  ->  '\n' .   (rule 3)

    $default	reduce using rule 3 (line)



state 8

    exp  ->  '(' . exp ')'   (rule 16)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 16



state 9

    exp  ->  '$' .   (rule 17)

    $default	reduce using rule 17 (exp)



state 10

    input  ->  input line .   (rule 2)

    $default	reduce using rule 2 (input)



state 11

    line  ->  exp . '\n'   (rule 4)
    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '+' 	shift, and go to state 17
    '-' 	shift, and go to state 18
    '*' 	shift, and go to state 19
    '/' 	shift, and go to state 20
    '^' 	shift, and go to state 21
    '\n'	shift, and go to state 22



state 12

    line  ->  error '\n' .   (rule 5)

    $default	reduce using rule 5 (line)



state 13

    exp  ->  VAR '=' . exp   (rule 8)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 23



state 14

    exp  ->  FNCT '(' . exp ')'   (rule 9)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 24



state 15

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  '-' exp .   (rule 14)
    exp  ->  exp . '^' exp   (rule 15)

    '^' 	shift, and go to state 21

    $default	reduce using rule 14 (exp)



state 16

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)
    exp  ->  '(' exp . ')'   (rule 16)

    '+' 	shift, and go to state 17
    '-' 	shift, and go to state 18
    '*' 	shift, and go to state 19
    '/' 	shift, and go to state 20
    '^' 	shift, and go to state 21
    ')' 	shift, and go to state 25



state 17

    exp  ->  exp '+' . exp   (rule 10)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 26



state 18

    exp  ->  exp '-' . exp   (rule 11)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 27



state 19

    exp  ->  exp '*' . exp   (rule 12)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 28



state 20

    exp  ->  exp '/' . exp   (rule 13)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 29



state 21

    exp  ->  exp '^' . exp   (rule 15)

    NUM 	shift, and go to state 3
    VAR 	shift, and go to state 4
    FNCT	shift, and go to state 5
    '-' 	shift, and go to state 6
    '(' 	shift, and go to state 8
    '$' 	shift, and go to state 9

    exp 	go to state 30



state 22

    line  ->  exp '\n' .   (rule 4)

    $default	reduce using rule 4 (line)



state 23

    exp  ->  VAR '=' exp .   (rule 8)
    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '+' 	shift, and go to state 17
    '-' 	shift, and go to state 18
    '*' 	shift, and go to state 19
    '/' 	shift, and go to state 20
    '^' 	shift, and go to state 21

    $default	reduce using rule 8 (exp)



state 24

    exp  ->  FNCT '(' exp . ')'   (rule 9)
    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '+' 	shift, and go to state 17
    '-' 	shift, and go to state 18
    '*' 	shift, and go to state 19
    '/' 	shift, and go to state 20
    '^' 	shift, and go to state 21
    ')' 	shift, and go to state 31



state 25

    exp  ->  '(' exp ')' .   (rule 16)

    $default	reduce using rule 16 (exp)



state 26

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp '+' exp .   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '*' 	shift, and go to state 19
    '/' 	shift, and go to state 20
    '^' 	shift, and go to state 21

    $default	reduce using rule 10 (exp)



state 27

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp '-' exp .   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '*' 	shift, and go to state 19
    '/' 	shift, and go to state 20
    '^' 	shift, and go to state 21

    $default	reduce using rule 11 (exp)



state 28

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp '*' exp .   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '^' 	shift, and go to state 21

    $default	reduce using rule 12 (exp)



state 29

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp '/' exp .   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)

    '^' 	shift, and go to state 21

    $default	reduce using rule 13 (exp)



state 30

    exp  ->  exp . '+' exp   (rule 10)
    exp  ->  exp . '-' exp   (rule 11)
    exp  ->  exp . '*' exp   (rule 12)
    exp  ->  exp . '/' exp   (rule 13)
    exp  ->  exp . '^' exp   (rule 15)
    exp  ->  exp '^' exp .   (rule 15)

    '^' 	shift, and go to state 21

    $default	reduce using rule 15 (exp)



state 31

    exp  ->  FNCT '(' exp ')' .   (rule 9)

    $default	reduce using rule 9 (exp)



state 32

    $   	go to state 33



state 33

    $default	accept
