Useless nonterminals:

   _ID


Terminals which are not used:

   NUMBER
   STRING
   ID


Useless rules:

#8     _ID :	 ID;



Grammar
rule 1    text -> words
rule 2    text -> text NEWLINE words
rule 3    words -> word
rule 4    words -> words ',' word
rule 5    word -> word1
rule 6    word1 -> ANYCHAR
rule 7    word1 -> word1 ANYCHAR

Terminals, with rules where they appear

$ (-1)
',' (44) 4
error (256)
NUMBER (258)
STRING (259)
ID (260) 8
ANYCHAR (261) 6 7
NEWLINE (262) 2

Nonterminals, with rules where they appear

text (9)
    on left: 1 2, on right: 2
words (10)
    on left: 3 4, on right: 1 2 4
word (11)
    on left: 5, on right: 3 4
word1 (12)
    on left: 6 7, on right: 5 7


state 0

    ANYCHAR	shift, and go to state 1

    text	go to state 2
    words	go to state 3
    word	go to state 4
    word1	go to state 5



state 1

    word1  ->  ANYCHAR .   (rule 6)

    $default	reduce using rule 6 (word1)



state 2

    text  ->  text . NEWLINE words   (rule 2)

    $   	go to state 11
    NEWLINE	shift, and go to state 6



state 3

    text  ->  words .   (rule 1)
    words  ->  words . ',' word   (rule 4)

    ',' 	shift, and go to state 7

    $default	reduce using rule 1 (text)



state 4

    words  ->  word .   (rule 3)

    $default	reduce using rule 3 (words)



state 5

    word  ->  word1 .   (rule 5)
    word1  ->  word1 . ANYCHAR   (rule 7)

    ANYCHAR	shift, and go to state 8

    $default	reduce using rule 5 (word)



state 6

    text  ->  text NEWLINE . words   (rule 2)

    ANYCHAR	shift, and go to state 1

    words	go to state 9
    word	go to state 4
    word1	go to state 5



state 7

    words  ->  words ',' . word   (rule 4)

    ANYCHAR	shift, and go to state 1

    word	go to state 10
    word1	go to state 5



state 8

    word1  ->  word1 ANYCHAR .   (rule 7)

    $default	reduce using rule 7 (word1)



state 9

    text  ->  text NEWLINE words .   (rule 2)
    words  ->  words . ',' word   (rule 4)

    ',' 	shift, and go to state 7

    $default	reduce using rule 2 (text)



state 10

    words  ->  words ',' word .   (rule 4)

    $default	reduce using rule 4 (words)



state 11

    $   	go to state 12



state 12

    $default	accept
