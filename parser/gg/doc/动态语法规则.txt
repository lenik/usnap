

- 动态语法规则
	- gd规则中，sym ::= sym1 sym2 sym3 等，符号(终结符和非终结符)具有表示内
	  容的抽象概括，而在分析程序中它必须具有实质的内容。

	  在 lex/yacc 的设计模式中，符号具有的实质内容由 lex 提取字串并处理成数
	  据结构 yylval 后交由 yacc 分析。合并 lex/yacc->G 后，字串提取并分析这
	  一步仍是必不可少的:

		int NUM;
		char *reg(char *)

		NUM :== reg("[0-9]+") { $$ = atol($1); }

	  上面需要考虑，一是 reg 怎么合成到 g 中去，以及一般的做法；另一是自动
	  机和语法的模块化设计。特别是后者非常重要。
