// fastalg.idl : IDL source for fastalg.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (fastalg.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(AECAFF4C-5D51-483A-8619-E80511E69439),
		dual,
		helpstring("Slotted-Array Operation Test Interface"),
		pointer_default(unique)
	]
	interface ISAOT : IDispatch
	{
		[propget, id(1), helpstring("property SlotAllocated")] HRESULT SlotAllocated([out, retval] long *pVal);
		[propget, id(2), helpstring("property Size")] HRESULT Size([out, retval] long *pVal);
		[id(3), helpstring("method SlotAdd")] HRESULT SlotAdd([out, retval]long *result);
		[id(4), helpstring("method SlotRemove")] HRESULT SlotRemove([in]long Slot);
		[id(5), helpstring("method SlotClear")] HRESULT SlotClear();
		[id(6), helpstring("method Insert")] HRESULT Insert([in]long Index, [out, retval]long *result);
		[id(7), helpstring("method Remove")] HRESULT Remove([in]long Index, [out, retval]long *result);
		[id(8), helpstring("method FindSlot")] HRESULT FindSlot([in]long Slot, [out, retval]long *result);
		[id(9), helpstring("method FindIndex")] HRESULT FindIndex([in]long Index, [out, retval]long *result);
		[id(10), helpstring("method SortSlots")] HRESULT SortSlots([out, retval]VARIANT *SortedSlots);
		[id(11), helpstring("method Append")] HRESULT Append([in]long count, [out, retval]long *result);
	};
	[
		object,
		uuid(604D4559-902D-4066-B1FA-81F692610519),
		dual,
		helpstring("Discover Ranges In Array Interface"),
		pointer_default(unique)
	]
	interface IDRIA : IDispatch
	{
		[id(1), helpstring("method Clear")] HRESULT Clear();
		[id(2), helpstring("method Ceil")] HRESULT Ceil([in]long x, [out, retval]int *retval);
		[id(3), helpstring("method Floor")] HRESULT Floor([in]long x, [out, retval]int *retval);
		[id(4), helpstring("method AddRange")] HRESULT AddRange([in]long lower, [in]long upper, [out, retval]BOOL *retval);
		[id(5), helpstring("method RemoveRange")] HRESULT RemoveRange([in]long lower, [in]long upper, [out, retval]BOOL *retval);
		[id(6), helpstring("method Add")] HRESULT Add([in]long x, [out, retval]BOOL *retval);
		[id(7), helpstring("method Remove")] HRESULT Remove([in]long x, [out, retval]BOOL *retval);
		[propget, id(8), helpstring("property Count")] HRESULT Count([out, retval] int *pVal);
		[propget, id(9), helpstring("property RangeLower")] HRESULT RangeLower([in]int index, [out, retval] long *pVal);
		[propget, id(10), helpstring("property RangeUpper")] HRESULT RangeUpper([in]int index, [out, retval] long *pVal);
	};

[
	uuid(5B4DC081-852D-4465-898E-D179454234DA),
	version(1.0),
	helpstring("Fast Algorithms 1.0 Type Library")
]
library FastAlgLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(CD583388-D348-4A9E-BBBB-9A8D25F3DAAD),
		helpstring("Slotted-Array Operation Test")
	]
	coclass SAOT
	{
		[default] interface ISAOT;
	};
	[
		uuid(AF43CEA4-BF31-4BF7-AEB6-EAD41BB7B476),
		helpstring("Discover Ranges In Array")
	]
	coclass DRIA
	{
		[default] interface IDRIA;
	};
};
