

	参考:
		x@a
		SAE.A.X 可扩展性
		SAE.A.C 兼容性
		(SAE:


- 可扩展
	- 可扩展不仅指功能上的扩充，同时意味着功能的减少、结构的调整、
	  对原过程的编辑与定制，接口能力、脚本能力、可控制深度等等。

- 后期可扩展
	- 二进制的可扩展
	- 大结构的可扩展

	为了设计具有良好可扩展能力的程序，可能会用到下列技术：
	- 函数调用的其它方法
		. 一般的方法是用栈传递参数
		. 可以采用多个栈/局部栈等, 实现单线程多状态函数调用, 具有一定 "纤程" 的概念.
		. 图栈, 仍旧是单一栈, 但并非线性结构. 可用于图规约等.
		. 消息传递, 通过扩充参数类型, 改写传递参数的形式.
		. 命名参数, 如 IDispatch 中使用这种方法. 但肯定要对其简化.
	- M-EP 的实现方法
		. 现有的方法包括 COM 导出 App 对象, DLL 全局函数表 (如 WDM, WINAMP 等都用这种方法)
		. epfs 导出, 可能会优先考虑 内存-epfs.
		. 1/bios 专用管道
	-

- 高级抽象方法学 (M-AA: Advanced Abstracting)
	- 这是一种必须考虑各种可扩展性的方法学。它提供了一种理想化工程的构造过程。

	- 抽象的过程
		- 全局抽象
			- 对客观事物的非常定性的描述。
			- 这个时候，对事物的理解是初步的，很多参数都尚未得知。
			- 在建模的过程中，能够实时的修改模型，以完成初步的总体抽象模型为目标。
			- 实施模型测试，在测试中逐步稳定全局抽象的内容，子功能分类等。
		- 级

		- 有效抽象
			- 在一个时间段内作为标准依据的严格定义的抽象接口。
			-