#include<iostream.h>
#include<dos.h>
#include<conio.h>
#include<time.h>
#if !defined _mouse_H
#ifndef_MOUSE_
#define_MOUSE_
#include<dos.h>
#include<stdio.h>
union REGS ireg,oreg;
char reset();
void showmouse();
void hidemouse();
char leftpressed();
char rightpressed();
void getxy(int *x,int *y);
void setxy(int x,int y);
void setxrange(int min,int max);
void setyrange(int min,int max);
void setgraphiccursor(int x,int y,unsigned int *pattern);
int motion(int *x,int *y);
int mousex,mousey;
void textcursor(int *x,int *y);
#ifndef _NOCURSOR_
unsigned cursor[7][32]={{0xe1ff,0xe1ff,0xe1ff,0xe1ff,0xe1ff,0xe000,0xe000,0xe000,0,0,0,0,0,0,0,0,0x1e00,0x1200,0x1200,0x1200,0x1200,0x13ff,0x1249,0x1249,0xf249,0x9001,0x9001,0x9001,0x8001,0x8001,0x8001,0xffff},
			{0x3fff,0x1fff,0x0fff,0x07ff,0x03ff,0x01ff,0x00ff,0x007f,0x003f,0x001f,0x01ff,0x10ff,0x30ff,0xf87f,0xf87f,0xfc3f,0,0x4000,0x6000,0x7000,0x7800,0x7c00,0x7e00,0x7f00,0x7f80,0x7fc0,0x6c00,0x4600,0x0600,0x0300,0x0300,0x0180},
			{0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0,0x4000,0x6000,0x7000,0x7800,0x7c00,0x7e00,0x7f00,0x7f80,0x7fc0,0x6c00,0x4600,0x0600,0x0300,0x0300,0x0180},
			{0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0200,0x0200,0x0200,0x0200,0x0200,0,0xf8f9,0x0000,0x0200,0x0200,0x0200,0x0200,0x0200,0x0000,0x0000,0x0000},
			{0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0,0x0038,0x0044,0x00a2,0x0132,0x025a,0x04a4,0x0948,0x1a90,0x1d20,0x2640,0x2380,0x2300,0x7c00,0x6000,0x0000},
			{0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0x0080,0x0180,0x0280,0x0440,0x0820,0x1010,0x2008,0x4004,0xfffe,0x8552,0x8aac,0x8558,0x82b0,0x8160,0x8000,0x8000},
			{0xff00,0xffe7,0xa4e4,0x00a7,0xad00,0xfd54,0xfd2a,0xfd54,0xfd2a,0xfd00,0xfd00,0xfd00,0xfc00,0xff00,0xff00,0xff00,0x00ff,0x0018,0x5b18,0x2218,0x52ff,0x02ab,0x02d5,0x02ab,0x02d5,0x02ff,0x02ff,0x02ff,0x03ff,0x00ff,0x00ff,0x00ff}};
#else
extern unsigned cursor[7][32];
#endif
#endif
#endif
char reset()
{union REGS ireg,oreg;
 ireg.x.ax=0;int86(0x33,&ireg,&oreg);
 if(oreg.x.ax==0)return(0);
 else return(1);
}
void showmouse()
{union REGS ireg,oreg; ireg.x.ax=1;int86(0x33,&ireg,&oreg);}
void hidemouse()
{union REGS ireg,oreg; ireg.x.ax=2;int86(0x33,&ireg,&oreg);}
char leftpressed()
{union REGS ireg,oreg; ireg.x.ax=3;int86(0x33,&ireg,&oreg); return(oreg.x.bx&1);}
char rightpressed()
{union REGS ireg,oreg; ireg.x.ax=3;int86(0x33,&ireg,&oreg); return(oreg.x.bx&2);}
void getxy(int *x,int *y)
{ireg.x.ax=3;int86(0x33,&ireg,&oreg);*x=oreg.x.cx;*y=oreg.x.dx;}
void setxy(int x,int y)
{union REGS ireg,oreg;ireg.x.ax=4;ireg.x.cx=x;ireg.x.dx=y;int86(0x33,&ireg,&oreg);}
void setxrange(int min,int max)
{union REGS ireg,oreg;ireg.x.ax=8;ireg.x.cx=min;ireg.x.dx=max;int86(0x33,&ireg,&oreg);}
void setyrange(int min,int max)
{union REGS ireg,oreg;ireg.x.ax=7;ireg.x.cx=min;ireg.x.dx=max;int86(0x33,&ireg,&oreg);}
void setgraphiccursor(int x,int y,unsigned int *pattern)
{union REGS ireg,oreg;
 struct SREGS segregs;
 ireg.x.ax=9;ireg.x.bx=x;ireg.x.cx=y;ireg.x.dx=FP_OFF(pattern);segregs.es=FP_SEG(pattern);
 int86x(0x33,&ireg,&oreg,&segregs);}
int motion(int *x,int *y)
{union REGS ireg,oreg;
 ireg.x.ax=11;int86(0x33,&ireg,&oreg);*x=oreg.x.cx;*y=oreg.x.dx;return(*x||*y);}
char getkey(int *x,int *y)  //out keyboard x,y's value
{union REGS ireg,oreg;
 ireg.x.ax=3;int86(0x33,&ireg,&oreg);*x=oreg.x.cx;*y=oreg.x.dx;return ireg.h.al;}
void textcursor(int *x,int *y)
{union REGS ireg,oreg;
 ireg.x.ax=10;ireg.x.bx=0;*x=ireg.x.cx;*y=ireg.x.dx;int86(0x33,&ireg,&oreg);}
