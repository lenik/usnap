

> 结构程序的可控制
	- 传统的结构化程序的特点, 有点类似于OOP的基本精神：封装，继承。但概念不一样：
		封装： 结构化程序中的外层不能访问内层。
		继承： 结构化程序中的内层可以访问外层。
		       同时，非相干层(并列的层次及该层次上的其它层次)之间不能互相访问。

	- 可控制结构化程序, 最关键的是解除外层访问内层的限制.


> 结构程序可控制的实现
	- 单线程模型
	  单线程模型的特点是: 处理方式被设计为完全独占的，只有一组寄存器、只有一个堆栈。
	  在这种模型中，由于一般的编译方法，自动变量被作为栈变量来实现，因此主要的问题是：
		- 如何提前构造栈变量？以及构造方法的效率问题。

	- 拟多线程模型
	  拟多线程模型的特点是: 处理方式被设计为共享，不考虑物理因素，在逻辑上有多组寄存器，
	  以及多个堆栈。单线程模型中的问题依然存在，但不是拟多线程模型关注的焦点。
	  在这种模型中，要考虑的问题有：
		- 如何访问非相干层，非相干层导出控制点的方法

	- 多线程模型
	  多线程模型的特点是: 处理方式被设计为共享与局部独占混合，物理和逻辑上均有可能多组
	  寄存器、多个堆栈、甚至拥有各自的硬件资源。拟多线程模型的问题依然存在，但不是多线
	  程模型关注的重点。
	  在这种模型中，要考虑的问题有：
		-


	具体问题：
		- 如何提前构造栈变量，及构造方法的效率问题

		- 非相干层导出控制的方法

		-

>

