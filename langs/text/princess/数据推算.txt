

就像图像处理中的几种方法一样：

	- 由图形生成函数生成的图形，对其施加的操作可以是

		- 对生成函数的处理，比如对生成函数做旋转运算

		- 对生成的图形坐标的处理，比如对顶点坐标旋转


最优工程中也有 先期函数处理 和 后期数据处理 的方法：

	- 最优化工程中，考虑一般的线性最优化，它最后可以转换成用一组等式，
	  （其中将不等式转换为含有自由变量的等式），通过矩阵求解来计算最优方法。

	  而事实上常常需要一种 渐进收敛 (gradually convergency, 'gradcon') 的方法
	  来计算非线性最优化。

	  因为确定算法描述的等式或不等式往往不存在。数据是从原始数据中获取的。
	  比如数据是由 .dll 提供的。即使等式存在，有时操作这些等式也是非常复杂的，
	  因而有必要使用一种并非全局最优的，而是局部较优的渐进收敛算法。

	- 可以通过非常复杂、非常智能的方法从原始数据中抽象出数据的本质逻辑，
	  这非常复杂，但是简单的逻辑如多项式逻辑还是可以通过一些方法（如最小二乘法）来达到。


一些推算方法

	- [小张问题] 关于最有效的同时使路程尽量短，这里事实上结点之间的距离可以用
	  有限元素的一张表来表示，因此甚至不需要渐进收敛的方法。

	  有时需要自己设计推算最优化的方法，而代替系统中常规的算法。
	  最重要的是如何使系统中的常规算法和替代算法都具有可扩展性，而这种可扩展性
	  可以支持在算法的内部采用又一种异构的算法来完成另一种优化。
